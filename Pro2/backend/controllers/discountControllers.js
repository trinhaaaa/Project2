const discountModel = require("../models/discountModel");

exports.autoDiscount = async (req, res) => {
    try {
        console.log("ğŸ”¹ Báº¯t Ä‘áº§u kiá»ƒm tra nguyÃªn liá»‡u dÆ° thá»«a...");

        const ingredient = await discountModel.getMostAbundantIngredient();
        if (!ingredient) {
            return res.status(400).json({ success: false, message: "KhÃ´ng cÃ³ nguyÃªn liá»‡u nÃ o dÆ° thá»«a." });
        }

        const dish = await discountModel.getDishByIngredient(ingredient.id);
        if (!dish) {
            return res.status(400).json({ success: false, message: `KhÃ´ng tÃ¬m tháº¥y mÃ³n Äƒn cho ${ingredient.name}.` });
        }

        const hasDiscount = await discountModel.checkIfDiscountExists(dish.product_id);
        if (hasDiscount) {
            return res.status(400).json({ success: false, message: `MÃ³n ${dish.name} Ä‘Ã£ cÃ³ giáº£m giÃ¡.` });
        }

        const newDiscountId = await discountModel.getMaxDiscountId();
        await discountModel.createDiscount(newDiscountId, ingredient.name, dish.product_id);
        await discountModel.linkDiscountToProduct(dish.product_id, newDiscountId);

        console.log(` Giáº£m giÃ¡ 20% Ä‘Ã£ Ä‘Æ°á»£c Ã¡p dá»¥ng cho mÃ³n ${dish.name}`);
        res.json({ success: true, message: ` Giáº£m giÃ¡ 20% cho mÃ³n ${dish.name} vÃ¬ dÆ° thá»«a ${ingredient.name}.` });

    } catch (error) {
        console.error(" Lá»—i há»‡ thá»‘ng:", error);
        res.status(500).json({ success: false, message: "Lá»—i há»‡ thá»‘ng khi táº¡o giáº£m giÃ¡." });
    }
};
